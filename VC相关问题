1.在OnEraseBkGnd中,如果你不调用原来缺省的OnEraseBkGnd只是重画背景则不会有闪烁.而在OnPaint里面,由于它隐含的调用了OnEraseBkGnd,而你又没有处理OnEraseBkGnd 函数,这时就和窗口缺省的背景刷相关了.缺省的 OnEraseBkGnd操作使用窗口的缺省背景刷刷新背景(一般情况下是白刷),而随后你又自己重画背景造成屏幕闪动.
  如果你调用Invalidate的时候参数为TRUE,那么在OnPaint里面隐含调用BeginPaint的时候就产生WM_ERASEBKGND消息,如果参数是FALSE,则不会重刷背景.
  https://blog.csdn.net/u011555996/article/details/78013752

2.C#调用opencv方法：https://blog.csdn.net/zhangzhe_0305/article/details/78399224

3.经验：C#调用C++ dll时，bool返回值始终为true

4.C++创建线程出错：线程的函数一定要为static。

5.实现键盘响应事件，在类向导添加PreTranslateMessage虚函数，在函数体内进行判断按键即操作：
  if(pMsg->message==WM_KEYDOWN)
  {
    switch(pMsg->wParam)
    {
    case VK_ESCAPE:
      (function)
      break;
    default:
      break;
    }
  }

6.去除对话框回车或Esc退出软件，添加虚函数OnOK()和OnCancel()，将两个函数中的处理语句都注释掉。

7.禁用鼠标：
  CPoint pMouse;  GetCursorPos(&pMouse);
  RECT rectMouse = {pMouse.x,pMouse.y,pMouse.x,pMouse.y};
  ClipCursor(&rectMouse);
  启用鼠标：
  ClipCursor(NULL);
8.隐藏鼠标：ShowCursor(false); 显示鼠标：ShowCursor(true);
9.
  C#编程，串口的收发功能，接收数据频率较高时，在关闭串口时会出现死锁现象。
  现象原因是串口接收时需要刷新主窗体，调用主线程；若同时主线程去关闭串口，会发现串口正在读取数据，则会等待串口读取数据操作执行；
  因此接收函数在等待主线程操作，主线程在等待接收函数操作，进入死锁状态。
  解决办法是：可以不在接收函数里操作主窗体；或者在主线程判断接收函数是否执行完成，没执行完成则不关闭，接收函数在执行完成后关闭。
10.
  文件超过4G，进行ftell读取文件大小时，返回-1.
  应使用 _fseeki64和_ftelli64
11.
  C#调用fixed使用unsafe语句时，报错“指针和固定大小缓冲区只能在不安全的上下文中使用”。
  解决办法：将调用地方的函数使用unsafe声明。
